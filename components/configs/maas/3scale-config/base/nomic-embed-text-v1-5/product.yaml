apiVersion: capabilities.3scale.net/v1beta1
kind: Product
metadata:
  name: nomic-embed-text-v1-5
spec:
  name: "Nomic-Embed-Text-v1.5"
  systemName: nomic-embed-text-v1-5
  deployment:
    apicastHosted:
      authentication:
        userkey:
          authUserKey: "Authorization"
          credentials: "authorization"
  description: >
    A multimodal text embedding model, supporting task instruction prefixes for search, classification, and clustering. Features Matryoshka representation learning for flexible dimensions and aligns with nomic-embed-vision-v1.5 for multimodal embeddings in the same space.
  backendUsages:
    nomic-embed-text-v1-5:
      path: /
  metrics:
    hits:
      description: Number of API hits
      friendlyName: Hits
      unit: "hit"
    total_tokens:
      description: Number of total tokens
      friendlyName: Total Tokens
      unit: "token"
    prompt_tokens:
      description: Number of prompt tokens
      friendlyName: Prompt Tokens
      unit: "token"
    completion_tokens:
      description: Number of completion tokens
      friendlyName: Completion Tokens
      unit: "token"
  methods:
    decode:
      friendlyName: "Decode"
      description: "Decode the input text"
    embed:
      friendlyName: "Embed"
      description: "Embed the input text"
    embed_all:
      friendlyName: "Embed All"
      description: "Embed all the input text"
    embed_sparse:
      friendlyName: "Embed Sparse"
      description: "Embed the input text in sparse format"
    health:
      friendlyName: "Health Check"
      description: "Check the health of the model"
    info:
      friendlyName: "Info"
      description: "Get the info of the model"
    similarity:
      friendlyName: "Similarity"
      description: "Get the similarity between the input text"
    tokenize:
      friendlyName: "Tokenize"
      description: "Tokenize the input text"
    embeddings:
      friendlyName: "Embeddings (OpenAI)"
      description: "Get the embeddings for the input text (OpenAI format)"
  mappingRules:
    - httpMethod: POST
      pattern: /decode
      metricMethodRef: decode
      increment: 1
    - httpMethod: POST
      pattern: /embed
      metricMethodRef: embed
      increment: 1
    - httpMethod: POST
      pattern: /embed_all
      metricMethodRef: embed_all
      increment: 1
    - httpMethod: POST
      pattern: /embed_sparse
      metricMethodRef: embed_sparse
      increment: 1
    - httpMethod: GET
      pattern: /health
      metricMethodRef: health
      increment: 1
    - httpMethod: GET
      pattern: /info
      metricMethodRef: info
      increment: 1
    - httpMethod: POST
      pattern: /similarity
      metricMethodRef: similarity
      increment: 1
    - httpMethod: POST
      pattern: /tokenize
      metricMethodRef: tokenize
      increment: 1
    - httpMethod: POST
      pattern: /v1/embeddings
      metricMethodRef: embeddings
      increment: 1
  applicationPlans:
    standard:
      name: "Standard"
      default: true
      appsRequireApproval: false
      published: true
  policies:
    - name: cors
      version: builtin
      enabled: true
      configuration:
        {
          "allow_origin": "*",
          "allow_headers": ["Authorization", "Content-type", "Accept"],
          "allow_methods": [],
        }
    - name: upstream_connection
      configuration:
        connect_timeout: 300
        read_timeout: 300
        send_timeout: 300
      enabled: true
      version: builtin
    - name: llm-metrics
      version: "0.1"
      enabled: true
      configuration:
        {
          "rules":
            [
              {
                "increment": "{{ llm_usage.total_tokens }}",
                "condition":
                  {
                    "operations":
                      [
                        {
                          "right_type": "plain",
                          "left_type": "liquid",
                          "left": "{{status}}",
                          "right": "200",
                          "op": "==",
                        },
                      ],
                    "combine_op": "and",
                  },
                "metric": "total_tokens",
              },
              {
                "increment": "{{ llm_usage.prompt_tokens }}",
                "condition":
                  {
                    "operations":
                      [
                        {
                          "right_type": "plain",
                          "left_type": "liquid",
                          "left": "{{status}}",
                          "right": "200",
                          "op": "==",
                        },
                      ],
                    "combine_op": "and",
                  },
                "metric": "prompt_tokens",
              },
              {
                "increment": "{{ llm_usage.completion_tokens }}",
                "condition":
                  {
                    "operations":
                      [
                        {
                          "right_type": "plain",
                          "left_type": "liquid",
                          "left": "{{status}}",
                          "right": "200",
                          "op": "==",
                        },
                      ],
                    "combine_op": "and",
                  },
                "metric": "completion_tokens",
              },
            ],
          "enable_sse_support": true,
        }
    - name: apicast
      version: "builtin"
      configuration: {}
      enabled: true
